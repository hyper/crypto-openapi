/**
 * Crypto
 * The API for Hyper's Crypto payments processor
 *
 * OpenAPI spec version: 1.0
 * Contact: support@hyper.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class InlineResponse20010RequestHeaders {
    'accept': string;
    'acceptEncoding': string;
    'connection': string;
    'contentLength': string;
    'contentType': string;
    'host': string;
    'postmanToken': string;
    'userAgent': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "accept",
            "baseName": "accept",
            "type": "string",
            "format": ""
        },
        {
            "name": "acceptEncoding",
            "baseName": "accept-encoding",
            "type": "string",
            "format": ""
        },
        {
            "name": "connection",
            "baseName": "connection",
            "type": "string",
            "format": ""
        },
        {
            "name": "contentLength",
            "baseName": "content-length",
            "type": "string",
            "format": ""
        },
        {
            "name": "contentType",
            "baseName": "content-type",
            "type": "string",
            "format": ""
        },
        {
            "name": "host",
            "baseName": "host",
            "type": "string",
            "format": ""
        },
        {
            "name": "postmanToken",
            "baseName": "postman-token",
            "type": "string",
            "format": ""
        },
        {
            "name": "userAgent",
            "baseName": "user-agent",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return InlineResponse20010RequestHeaders.attributeTypeMap;
    }

    public constructor() {
    }
}

